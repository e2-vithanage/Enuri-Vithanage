#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue May 17 17:46:12 2022

@author: macbook
"""
#countMotif.py
 

# Function to read fasta file
def readFastaFile(fp):
    name, seqs = None, []
    for line in fp:
        line = line.rstrip()
        if line.startswith(">"):
            if name:
                yield (name, seqs)
            name, seqs = line, []
        else:
            seqs.append(line)
    if name:
        yield (name, seqs)

# DNA motifs

motifs = ["AAAGAAAAAGAAAAAAGAA"	,	"AAAGAAAAAGAAAAAGAAAAAGAA"	,	"AAAGAAAAAGAAAAAGAAAAAGAAAAAGAA"
,	"GGGTGGGGGTGGGGGTGG"	,	"GGGTGGGGGTGGGGGTGGGGGTGG"	,	"GGGTGGGGGTGGGGGTGGGGGTGGGGGTGG"
,	"GGGTTGGGGTTGGGGTTG"	,	"GGGTTGGGGTTGGGGTTGGGGTTG"	,	"GGGTTGGGGTTGGGGTTGGGGTTGGGGTTG"
,	"TTGTGTTTGTGTTTGTGT"	,	"TTGTGTTTGTGTTTGTGTTTGTGT"	,	"TTGTGTTTGTGTTTGTGTTTGTGTTTGTGT"
,	"AGTGTAAGTGTAAGTGTA"	,	"AGTGTAAGTGTAAGTGTAAGTGTA"	,	"AGTGTAAGTGTAAGTGTAAGTGTAAGTGTA"
,	"AAAAGTAAAAGTAAAAGT"	,	"AAAAGTAAAAGTAAAAGTAAAAGT"	,	"AAAAGTAAAAGTAAAAGTAAAAGTAAAAGT"
,	"TTATGTTTATGTTTATGT"	,	"TTATGTTTATGTTTATGTTTATGT"	,	"TTATGTTTATGTTTATGTTTATGTTTATGT"
,	"AAGAAAAAGAAAAAGAAA"	,	"AAGAAAAAGAAAAAGAAAAAGAAA"	,	"AAGAAAAAGAAAAAGAAAAAGAAAAAGAAA"
,	"TTGGGATTGGGATTGGGA"	,	"TTGGGATTGGGATTGGGATTGGGA"	,	"TTGGGATTGGGATTGGGATTGGGATTGGGA"
,	"TGGTCTTGGTCTTGGTCT"	,	"TGGTCTTGGTCTTGGTCTTGGTCT"	,	"TGGTCTTGGTCTTGGTCTTGGTCTTGGTCT"
,	"AAACTGAAACTGAAACTG"	,	"AAACTGAAACTGAAACTGAAACTG"	,	"AAACTGAAACTGAAACTGAAACTGAAACTG"
,	"CATTTACATTTACATTTA"	,	"CATTTACATTTACATTTACATTTA"	,	"CATTTACATTTACATTTACATTTACATTTA"
,	"TCAAGGTCAAGGTCAAGG"	,	"TCAAGGTCAAGGTCAAGGTCAAGG"	,	"TCAAGGTCAAGGTCAAGGTCAAGGTCAAGG"
,	"GGGACTGGGACTGGGACT"	,	"GGGACTGGGACTGGGACTGGGACT"	,	"GGGACTGGGACTGGGACTGGGACTGGGACT"
,	"AGATAGAGATAGAGATAG"	,	"AGATAGAGATAGAGATAGAGATAG"	,	"AGATAGAGATAGAGATAGAGATAGAGATAG"
,	"CTTACCCTTACCCTTACC"	,	"CTTACCCTTACCCTTACCCTTACC"	,	"CTTACCCTTACCCTTACCCTTACCCTTACC"
,	"AACATCAACATCAACATC"	,	"AACATCAACATCAACATCAACATC"	,	"AACATCAACATCAACATCAACATCAACATC"
,	"TGGACTTGGACTTGGACT"	,	"TGGACTTGGACTTGGACTTGGACT"	,	"TGGACTTGGACTTGGACTTGGACTTGGACT"
,	"CAAGGACAAGGACAAGGA"	,	"CAAGGACAAGGACAAGGACAAGGA"	,	"CAAGGACAAGGACAAGGACAAGGACAAGGA"
,	"GTCCCAGTCCCAGTCCCA"	,	"GTCCCAGTCCCAGTCCCAGTCCCA"	,	"GTCCCAGTCCCAGTCCCAGTCCCAGTCCCA"
,	"AACTCTAACTCTAACTCT"	,	"AACTCTAACTCTAACTCTAACTCT"	,	"AACTCTAACTCTAACTCTAACTCTAACTCT"
,	"ATACTAATACTAATACTA"	,	"ATACTAATACTAATACTAATACTA"	,	"ATACTAATACTAATACTAATACTAATACTA"
,	"AGAAAGAGAAAGAGAAAG"	,	"AGAAAGAGAAAGAGAAAGAGAAAG"	,	"AGAAAGAGAAAGAGAAAGAGAAAGAGAAAG"
,	"TTTCCGTTTCCGTTTCCG"	,	"TTTCCGTTTCCGTTTCCGTTTCCG"	,	"TTTCCGTTTCCGTTTCCGTTTCCGTTTCCG"
,	"TATGAGTATGAGTATGAG"	,	"TATGAGTATGAGTATGAGTATGAG"	,	"TATGAGTATGAGTATGAGTATGAGTATGAG"
,	"CCCTCACCCTCACCCTCA"	,	"CCCTCACCCTCACCCTCACCCTCA"	,	"CCCTCACCCTCACCCTCACCCTCACCCTCA"
,	"AATAACAATAACAATAAC"	,	"AATAACAATAACAATAACAATAAC"	,	"AATAACAATAACAATAACAATAACAATAAC"
,	"ATCACCATCACCATCACC"	,	"ATCACCATCACCATCACCATCACC"	,	"ATCACCATCACCATCACCATCACCATCACC"
,	"GGGTCAGGGTCAGGGTCA"	,	"GGGTCAGGGTCAGGGTCAGGGTCA"	,	"GGGTCAGGGTCAGGGTCAGGGTCAGGGTCA"
,	"AACAAGAACAAGAACAAG"	,	"AACAAGAACAAGAACAAGAACAAG"	,	"AACAAGAACAAGAACAAGAACAAGAACAAG"
,	"CTCTTACTCTTACTCTTA"	,	"CTCTTACTCTTACTCTTACTCTTA"	,	"CTCTTACTCTTACTCTTACTCTTACTCTTA"
,	"GTTGGGGTTGGGGTTGGG"	,	"GTTGGGGTTGGGGTTGGGGTTGGG"	,	"GTTGGGGTTGGGGTTGGGGTTGGGGTTGGG"
,	"GACTATGACTATGACTAT"	,	"GACTATGACTATGACTATGACTAT"	,	"GACTATGACTATGACTATGACTATGACTAT"
,	"TTTAGGTTTAGGTTTAGG"	,	"TTTAGGTTTAGGTTTAGGTTTAGG"	,	"TTTAGGTTTAGGTTTAGGTTTAGGTTTAGG"
,	"AGATTGAGATTGAGATTG"	,	"AGATTGAGATTGAGATTGAGATTG"	,	"AGATTGAGATTGAGATTGAGATTGAGATTG"
,	"TTACCCTTACCCTTACCC"	,	"TTACCCTTACCCTTACCCTTACCC"	,	"TTACCCTTACCCTTACCCTTACCCTTACCC"
,	"GAGTTTGAGTTTGAGTTT"	,	"GAGTTTGAGTTTGAGTTTGAGTTT"	,	"GAGTTTGAGTTTGAGTTTGAGTTTGAGTTT"
,	"GTGAATGTGAATGTGAAT"	,	"GTGAATGTGAATGTGAATGTGAAT"	,	"GTGAATGTGAATGTGAATGTGAATGTGAAT"
,	"AGATACAGATACAGATAC"	,	"AGATACAGATACAGATACAGATAC"	,	"AGATACAGATACAGATACAGATACAGATAC"
,	"TTCACTTTCACTTTCACT"	,	"TTCACTTTCACTTTCACTTTCACT"	,	"TTCACTTTCACTTTCACTTTCACTTTCACT"
,	"AATACTAATACTAATACT"	,	"AATACTAATACTAATACTAATACT"	,	"AATACTAATACTAATACTAATACTAATACT"
,	"TACTATTACTATTACTAT"	,	"TACTATTACTATTACTATTACTAT"	,	"TACTATTACTATTACTATTACTATTACTAT"
,	"GAGTTGGAGTTGGAGTTG"	,	"GAGTTGGAGTTGGAGTTGGAGTTG"	,	"GAGTTGGAGTTGGAGTTGGAGTTGGAGTTG"
,	"GGAGATGGAGATGGAGAT"	,	"GGAGATGGAGATGGAGATGGAGAT"	,	"GGAGATGGAGATGGAGATGGAGATGGAGAT"
,	"GGATGTGGATGTGGATGT"	,	"GGATGTGGATGTGGATGTGGATGT"	,	"GGATGTGGATGTGGATGTGGATGTGGATGT"
,	"TGATTGTGATTGTGATTG"	,	"TGATTGTGATTGTGATTGTGATTG"	,	"TGATTGTGATTGTGATTGTGATTGTGATTG"
,	"CCCCAACCCCAACCCCAA"	,	"CCCCAACCCCAACCCCAACCCCAA"	,	"CCCCAACCCCAACCCCAACCCCAACCCCAA"
,	"AAATAAAAATAAAAATAA"	,	"AAATAAAAATAAAAATAAAAATAA"	,	"AAATAAAAATAAAAATAAAAATAAAAATAA"
,	"CTACTACTACTACTACTA"	,	"CTACTACTACTACTACTACTACTA"	,	"CTACTACTACTACTACTACTACTACTACTA"
,	"TCTCTCTCTCTCTCTCTC"	,	"TCTCTCTCTCTCTCTCTCTCTCTC"	,	"TCTCTCTCTCTCTCTCTCTCTCTCTCTCTC"
					
,	"CGGCGGCGG"	,	"CGGCGGCGGCGG"	,	"CGGCGGCGGCGGCGG"
,	"CAGCAGCAG"	,	"CAGCAGCAGCAG"	,	"CAGCAGCAGCAGCAG"
,	"GGCGGCGGC"	,	"GGCGGCGGCGGC"	,	"GGCGGCGGCGGCGGC"
,	"CTGCTGCTG"	,	"CTGCTGCTGCTG"	,	"CTGCTGCTGCTGCTG"
,	"GAAGAAGAA"	,	"GAAGAAGAAGAA"	,	"GAAGAAGAAGAAGAA"
,	"GGGGCCGGGGCCGGGGCC"	,	"GGGGCCGGGGCCGGGGCCGGGGCC"	,	"GGGGCCGGGGCCGGGGCCGGGGCCGGGGCC"
,	"CACACACACACA"	,	"CACACACACACACACA"	,	"CACACACACACACACACACA"
,	"CCGCCGCCG"	,	"CCGCCGCCGCCG"	,	"CCGCCGCCGCCGCCG"
,	"CCTGCCTGCCTG"	,	"CCTGCCTGCCTGCCTG"	,	"CCTGCCTGCCTGCCTGCCTG"
,	"ATTCTATTCTATTCT"	,	"ATTCTATTCTATTCTATTCT"	,	"ATTCTATTCTATTCTATTCTATTCT"
,	"GCGGCGGCG"	,	"GCGGCGGCGGCG"	,	"GCGGCGGCGGCGGCG"
,	"TGGAATGGAATGGAA"	,	"TGGAATGGAATGGAATGGAA"	,	"TGGAATGGAATGGAATGGAATGGAA"
,	"TACTTACTTACT"	,	"TACTTACTTACTTACT"	,	"TACTTACTTACTTACTTACT"
,	"AAAAAAAAA"	,	"AAAAAAAAAAAA"	,	"AAAAAAAAAAAAAAA"
,	"AATAATAAT"	,	"AATAATAATAAT"	,	"AATAATAATAATAAT"
,	"AAGAAGAAG"	,	"AAGAAGAAGAAG"	,	"AAGAAGAAGAAGAAG"
,	"AACAACAAC"	,	"AACAACAACAAC"	,	"AACAACAACAACAAC"
,	"ATAATAATA"	,	"ATAATAATAATA"	,	"ATAATAATAATAATA"
,	"ATTATTATT"	,	"ATTATTATTATT"	,	"ATTATTATTATTATT"
,	"ATGATGATG"	,	"ATGATGATGATG"	,	"ATGATGATGATGATG"
,	"ATCATCATC"	,	"ATCATCATCATC"	,	"ATCATCATCATCATC"
,	"AGAAGAAGA"	,	"AGAAGAAGAAGA"	,	"AGAAGAAGAAGAAGA"
,	"AGTAGTAGT"	,	"AGTAGTAGTAGT"	,	"AGTAGTAGTAGTAGT"
,	"AGGAGGAGG"	,	"AGGAGGAGGAGG"	,	"AGGAGGAGGAGGAGG"
,	"AGCAGCAGC"	,	"AGCAGCAGCAGC"	,	"AGCAGCAGCAGCAGC"
,	"ACAACAACA"	,	"ACAACAACAACA"	,	"ACAACAACAACAACA"
,	"ACTACTACT"	,	"ACTACTACTACT"	,	"ACTACTACTACTACT"
,	"ACGACGACG"	,	"ACGACGACGACG"	,	"ACGACGACGACGACG"
,	"ACCACCACC"	,	"ACCACCACCACC"	,	"ACCACCACCACCACC"
,	"TAATAATAA"	,	"TAATAATAATAA"	,	"TAATAATAATAATAA"
,	"TATTATTAT"	,	"TATTATTATTAT"	,	"TATTATTATTATTAT"
,	"TAGTAGTAG"	,	"TAGTAGTAGTAG"	,	"TAGTAGTAGTAGTAG"
,	"TACTACTAC"	,	"TACTACTACTAC"	,	"TACTACTACTACTAC"
,	"TTATTATTA"	,	"TTATTATTATTA"	,	"TTATTATTATTATTA"
,	"TTTTTTTTT"	,	"TTTTTTTTTTTT"	,	"TTTTTTTTTTTTTTT"
,	"TTGTTGTTG"	,	"TTGTTGTTGTTG"	,	"TTGTTGTTGTTGTTG"
,	"TTCTTCTTC"	,	"TTCTTCTTCTTC"	,	"TTCTTCTTCTTCTTC"
,	"TGATGATGA"	,	"TGATGATGATGA"	,	"TGATGATGATGATGA"
,	"TGTTGTTGT"	,	"TGTTGTTGTTGT"	,	"TGTTGTTGTTGTTGT"
,	"TGGTGGTGG"	,	"TGGTGGTGGTGG"	,	"TGGTGGTGGTGGTGG"
,	"TGCTGCTGC"	,	"TGCTGCTGCTGC"	,	"TGCTGCTGCTGCTGC"
,	"TCATCATCA"	,	"TCATCATCATCA"	,	"TCATCATCATCATCA"
,	"TCTTCTTCT"	,	"TCTTCTTCTTCT"	,	"TCTTCTTCTTCTTCT"
,	"TCGTCGTCG"	,	"TCGTCGTCGTCG"	,	"TCGTCGTCGTCGTCG"
,	"TCCTCCTCC"	,	"TCCTCCTCCTCC"	,	"TCCTCCTCCTCCTCC"
,	"GATGATGAT"	,	"GATGATGATGAT"	,	"GATGATGATGATGAT"
,	"GAGGAGGAG"	,	"GAGGAGGAGGAG"	,	"GAGGAGGAGGAGGAG"
,	"GACGACGAC"	,	"GACGACGACGAC"	,	"GACGACGACGACGAC"
,	"GTAGTAGTA"	,	"GTAGTAGTAGTA"	,	"GTAGTAGTAGTAGTA"
,	"GTTGTTGTT"	,	"GTTGTTGTTGTT"	,	"GTTGTTGTTGTTGTT"
,	"GTGGTGGTG"	,	"GTGGTGGTGGTG"	,	"GTGGTGGTGGTGGTG"
,	"GTCGTCGTC"	,	"GTCGTCGTCGTC"	,	"GTCGTCGTCGTCGTC"
,	"GGAGGAGGA"	,	"GGAGGAGGAGGA"	,	"GGAGGAGGAGGAGGA"
,	"GGTGGTGGT"	,	"GGTGGTGGTGGT"	,	"GGTGGTGGTGGTGGT"
,	"GGGGGGGGG"	,	"GGGGGGGGGGGG"	,	"GGGGGGGGGGGGGGG"
,	"GCAGCAGCA"	,	"GCAGCAGCAGCA"	,	"GCAGCAGCAGCAGCA"
,	"GCTGCTGCT"	,	"GCTGCTGCTGCT"	,	"GCTGCTGCTGCTGCT"
,	"GCCGCCGCC"	,	"GCCGCCGCCGCC"	,	"GCCGCCGCCGCCGCC"
,	"CAACAACAA"	,	"CAACAACAACAA"	,	"CAACAACAACAACAA"
,	"CATCATCAT"	,	"CATCATCATCAT"	,	"CATCATCATCATCAT"
,	"CACCACCAC"	,	"CACCACCACCAC"	,	"CACCACCACCACCAC"
,	"CTACTACTA"	,	"CTACTACTACTA"	,	"CTACTACTACTACTA"
,	"CTTCTTCTT"	,	"CTTCTTCTTCTT"	,	"CTTCTTCTTCTTCTT"
,	"CTCCTCCTC"	,	"CTCCTCCTCCTC"	,	"CTCCTCCTCCTCCTC"
,	"CGACGACGA"	,	"CGACGACGACGA"	,	"CGACGACGACGACGA"
,	"CGTCGTCGT"	,	"CGTCGTCGTCGT"	,	"CGTCGTCGTCGTCGT"
,	"CGCCGCCGC"	,	"CGCCGCCGCCGC"	,	"CGCCGCCGCCGCCGC"
,	"CCACCACCA"	,	"CCACCACCACCA"	,	"CCACCACCACCACCA"
,	"CCTCCTCCT"	,	"CCTCCTCCTCCT"	,	"CCTCCTCCTCCTCCT"
,	"CCCCCCCCC"	,	"CCCCCCCCCCCC"	,	"CCCCCCCCCCCCCCC"
]
          
# Read fasta file
with open('HTT (HD).fasta') as fp:
#with open('MECP2.fasta') as fp:
#with open('JAK2.fasta') as fp:

    for name, seqs in readFastaFile(fp):
        print("Name:", name)
        print("Rate of appearance of DNA motif:")
        # Loop over motifs
        for motif in motifs:
            motifCount = 0
            # Loop over sequences
            for seq in seqs:
                motifCount += seq.count(motif)
            print("    " + motif + ":", motifCount)
    
#find if it more than the mo
            
            